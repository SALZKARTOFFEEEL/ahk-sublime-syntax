%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
name: AutoHotkey v2
file_extensions:
  - ahk
scope: source.ahk

variables:
  functions: (?i:Abs|(?:A)?(?:Sin|Cos|Tan)|BlockInput|Ceil|Chr|Click|ClipWait|ComObj(?:Active|Array|Connect|Create|Error|Flags|Get|Query|Type|Value)?|Control(?:AddItem|Choose(?:String)?|Click|DeleteItem|EditPaste|FindItem|Focus|Get(?:Checked|Choice|Current(?:Col|Line)|Enabled|Focus|Hwnd|Line(?:Count)?|List|Pos|Selected|(?:Ex)?Style|Tab|Text|Visible)|Hide(?:DropDown)?|Move|Set(?:Checked|Enabled|(?:Ex)?Style|Tab|Text)|Show(?:DropDown)?)|CoordMode|Critical|Date(?:Add|Diff)|DetectHidden(?:Text|Windows)|Dir(?:Copy|Create|Delete|Move|Select)|DllCall|Download|Drive(?:Get)?|Env(?:Get|Set)?|Exp|File(?:Append|Copy|CreateShortcut|Delete|Encoding|Exist|Install|Get(?:Attrib|Shortcut|Size|Time|Version)|Move|Open|Read|Recycle(?:Empty)?|Select|Set(?:Attrib|Time))|Floor|Format(?:Time)?|Func|GetKey(?:Name|SC|State|VK)|Group(?:Activate|Add|Close|Deactivate)|Gui(?:Create|CtrlFromHwnd|FromHwnd)|Hotkey|ImageSearch|Ini(?:Delete|Read|Write)|Input(?:Box|End)?|InStr|Is(?:ByRef|Func|Label|Object)|Key(?:History|Wait)|List(?:Hotkeys|Lines|Vars)|LoadPicture|Log|Ln|Menu(?:Get(?:Handle|Name)|Select)?|Mod|MonitorGet|Mouse(?:Click(?:Drag)?|GetPos|Move)|MsgBox|Num(?:Get|Put)|Obj(?:AddRef|Release|BindMethod|RawSet)|On(?:ClipboardChange|Exit|Message)|Ord|OutputDebug|Pixel(?:GetColor|Search)|PostMessage|Process(?:Close|Exist|SetPriority|Wait(?:Close)?)|Random|RegEx(?:Match|Replace)|Reg(?:Delete(?:Key)?|Read|Write)|RegisterCallback|Round|Run(?:As|Wait)?|Send(?:Raw|Input|Play|Event|Level|Message|Mode)?|Set(?:CapslockState|ControlDelay|DefaultMouseSpeed|KeyDelay|NumlockState|ScrollLockState|RegView|StoreCaplockMode|Timer|TitleMatchMode|WinDelay|WorkingDir)|Shutdown|Sleep|Sort|Sound(?:Beep|Get|Play|Set)|SplitPath|Sqrt|StatusBar(?:GetText|Wait)|Str(?:Get|Put)|StringCaseSense|Str(?:Len|Lower|Replace|Split|Upper)|SubStr|SysGet|Thread|ToolTip|TrayTip|Trim|RTrim|LTrim|Type|VarSetCapacity|Win(?:Activate(?:Bottom)?|Active|Close|Exist|Get(?:Class|Controls(?:Hwnd)?|Count|(?:Ex)?Style|ID(?:Last)?|List|MinMax|PID|Process(?:Name|Path)|Pos|Text|Title|TransColor|Transparent)|Hide|Kill|Maximize|Minimize(?:All(?:Undo)?)?|Move(?:Bottom|Top)?|Redraw|Restore|Set(?:AlwaysOnTop|Enabled|(?:Ex)?Style|Region|Title|TransColor|Transparent)|Show|Wait(?:Active|Close|NotActive)?))
  valid_name: (?i:\b([a-z_]|[^[:ascii:]])(\w|[^[:ascii:]])*\b)
  invalid_name: (?i:\b(([0-9](\w|[^[:ascii:]])+)|And|Contains|In|Is|New|Not|Or|Break|Catch|Continue|Else|Finally|For|Gosub|Goto|If|Loop|LoopFile|LoopParse|LoopRead|LoopReg|Return|Throw|Try|Until|While)\b)
  keys: (?i:[a-z0-9]|[LRM]Button|XButton[12]|Wheel(Up|Down|Left|Right)|CapsLock|Space|Tab|Enter|Return|Escape|Esc|Backspace|BS|ScrollLock|Delete|Del|Insert|Ins|Home|End|PgUp|PgDn|Up|Down|Left|Right|NumLock|Numpad([0-9]|Dot|Div|Mult|Add|Sub|Enter)|F([1-9]|1[0-9]|2[0-4])|[LR]Win|((L|R)?(Control|Ctrl|Alt|Shift))|Browser_(Back|Forward|Refresh|Stop|Search|Favorites|Home)|Volume_(Mute|Down|Up)|Media_(Next|Prev|Stop|Play_Pause)|Launch_(Mail|Media|App[12])|AppsKey|PrintScreen|CtrlBreak|Puase|Break|Help|Sleep|SC[0-9A-F]{3}|VK[0-9A-F]{2})(?i:\s+Up)?
  joystick_keys: (?i:[1-9]|1[0-6])?Joy([1-9]|1[0-9]|2[0-9]|3[0-2])

contexts:
  main:
    - include: Hotkeys
    - include: Hotstrings
    - include: Directives
    - include: Flow
    - include: Labels
    - include: Expressions
    
  prototype:
    - include: LineComments
    - include: BlockComments
    
  LineComments:
    - match: (?<=^|\s)(;)
      scope: punctuation.definition.comment.begin.ahk
      push:
        - meta_scope: comment.line.ahk
        - match: '$'
          pop: true
  BlockComments:
    - match: (^\s*/\*)
      scope: punctuation.definition.comment.begin.ahk
      push:
        - meta_scope: comment.block.ahk
        - match: (^\s*\*/|\*/\s*$)
          scope: punctuation.definition.comment.end.ahk
          pop: true
          
  Directives:
    - match: (^\s*#)(?=\S+)
      scope: keyword.ahk
      push:
        - match: (?i:ClipboardTimeout|HotkeyInterval|HotkeyModifierTimeout|IfTimeout|InputLevel|KeyHistory|MaxHotkeysPerInterval|MaxThreads|MaxThreadsPerHotkey)\b(\s+(((?<![\da-fA-F])(\+|\-))?(?<!\.)\b(0x|0X)?[\da-fA-F]+\b(?!\.))?)
          captures:
            0: keyword.ahk
            1: constant.numeric.integer.ahk
          pop: true
        - match: (?i:ErrorStdOut|InstallKeybdHook|InstallMouseHook|NoTrayIcon|Persistent|WinActivateForce)\b
          scope: keyword.ahk
          pop: true
        - match: (?i:MaxThreadsBuffer|UseHook)\b\s+(?i:On|Off)?
          scope: keyword.ahk
          pop: true
        - match: (?i:Hotstring)\b(\s+(?i:NoMouse|EndChars( .*)?|((?i:\*0|\*|\?0|\?|B0|B|C1|C0|C|K(-)?\d+|O0|O|P(-)?\d+|R0|R|SI|SP|SE|Z0|Z)+)))?
          captures:
            0: keyword.ahk
            2: string.unquoted.ahk
            3: hotstring.option.ahk
          pop: true
        - match: (?i:If\b)
          scope: keyword.ahk
          pop: true
          push: expressions
        - match: (?i:IfWin(Not)?(Active|Exist)\b)(\s+(.*))?
          captures:
            0: keyword.ahk
            4: string.unquoted.ahk
          pop: true
        - match: (?i:(Include)\b\s+(<(.*)>\s*([^;]*)?))
          captures:
            1: keyword.ahk
            2: string.unquoted.ahk
            3: support.function.ahk
            4: invalid.illegal.ahk
          pop: true
        - match: (?i:Include(Again)?(\s+([^;]*)())?)
          captures:
            0: keyword.ahk
            3: string.unquoted.ahk
          pop: true
        - match: (?i:(MenuMaskKey)\b\s+([a-z0-9]|[LRM]Button|XButton[12]|Wheel(Up|Down|Left|Right)|CapsLock|Space|Tab|Enter|Return|Escape|Esc|Backspace|BS|ScrollLock|Delete|Del|Insert|Ins|Home|End|PgUp|PgDn|Up|Down|Left|Right|NumLock|Numpad([0-9]|Dot|Div|Mult|Add|Sub|Enter)|F([1-9]|1[0-9]|2[0-4])|[LR]Win|((L|R)?(Control|Ctrl|Alt|Shift))|Browser_(Back|Forward|Refresh|Stop|Search|Favorites|Home)|Volume_(Mute|Down|Up)|Media_(Next|Prev|Stop|Play_Pause)|Launch_(Mail|Media|App[12])|AppsKey|PrintScreen|CtrlBreak|Puase|Break|Help|Sleep|VK\d{2})\b)
          captures:
            0: keyword.ahk
            2: hotkey.key.ahk
          pop: true
        - match: (?i:(SingleInstance)\b(\s+(Force|Ignore|Off))?)
          scope: keyword.ahk
          pop: true
        - match: (?i:(Warn)\b(\s+(UseUnset(Local|Global)|LocalSameAsGlobal|All)?(\s*,\s*)?(MsgBox|StdOut|OutputDebug|Off)?)?)
          scope: keyword.ahk
          pop: true
        - match: $
          pop: true
        
  Flow:
    - meta_include_prototype: false
    - match: (?i:(Break|Continue)(?=\s|$)(\s+((\d+)|([^\s,`;][^\s,`]*)))?)
      captures:
        1: keyword.control.flow.ahk
        4: constant.numeric.integer.ahk
        5: label.name.ahk
        
    - match: (?i:(Else\s+)?If)(?=\s|$)
      scope: keyword.control.conditional.ahk
    - match: (?i:(Else))(?=\s|$)
      captures:
        1: keyword.control.conditional.ahk
      
    - match: (?i:(Return))(?=\s|$)
      scope: keyword.control.flow.ahk
      
    - match: (?i:(Gosub|Goto)(?=\s|$)(\s+([^\s,`]+))?)
      captures:
        1: keyword.control.flow.ahk
        3: label.name.ahk
        
    - match: (?i:(Exit(App)?))(?=\s|$)
      scope: keyword.control.flow.ahk
      
    - match: (?i:(Try|Throw|Catch|Finally))(?=\s|$)
      scope: keyword.control.flow.ahk
      
    - match: (?i:(Critical))(?=\s|$)
      scope: keyword.control.flow.ahk
      
    - match: (?i:(Loop\s+(Files|Parse|Read|Reg),\s*))(?=\s|$)
      scope: keyword.control.flow.ahk
    - match: (?i:(Loop|While))(?=\s|$)
      scope: keyword.control.flow.ahk
    - match: (?i:(For)(\s+({{valid_name}})(\s*,\s*({{valid_name}}))?\s+(in)\s+)?)(?=\s|$)
      captures:
        1: keyword.control.flow.ahk
        3: variable.language.ahk
        7: variable.language.ahk
        10: keyword.operator.word.ahk
    - match: (?i:Until)(?=\s)
      scope: keyword.control.flow.ahk
        
  Hotkeys:
    # remapping hotkey
    - match: ^\s*(({{keys}})(::)({{keys}}(?!\s*[^\s;])))
      captures:
        1: hotkey.ahk
        2: hotkey.key.ahk
        13: hotkey.doublecolon.ahk
        14: hotkey.key.ahk
    # regular hotkey
    - match: ^\s*((\*|~|\$|(<|>)?(#|!|\^|\+))*({{keys}}|{{joystick_keys}}))(::)
      captures:
        1: hotkey.ahk
        2: hotkey.modifier.ahk
        3: hotkey.modifier.LeftRight.ahk
        4: hotkey.modifier.key.ahk
        5: hotkey.key.ahk
        17: hotkey.doublecolon.ahk
    # custom combination hotkey
    - match: ^\s*(({{keys}})\s+(&)\s+({{keys}}))(::)
      captures:
        1: hotkey.ahk
        2: hotkey.key.ahk
        13: hotkey.ampersand.ahk
        14: hotkey.key.ahk
        25: hotkey.doublecolon.ahk
        
  Hotstrings:
    - match: ^\s*((:)(((?i:\*0|\*|\?0|\?|B0|B|C1|C0|C|K(-)?\d+|O0|O|P(-)?\d+|R0|R|SI|SP|SE|Z0|Z)\s*)*)?(:)(.*)(::))([^;]*)?
      captures:
        1: hotstring.ahk
        2: hotstring.colon.ahk
        3: hotstring.option.ahk
        7: hotstring.colon.ahk
        8: hotstring.trigger.ahk
        9: hotstring.colon.ahk
        10: string.unquoted.ahk
        
  Labels:
    - match: (^\s*[^\s,`]+)(:)(?!\s*[^\s;])
      captures:
        1: label.name.ahk
        2: label.colon.ahk
        
  Expressions:
    - include: double_quoted_strings
    - include: single_quoted_strings
    #- include: brackets
    #- include: parentheses
    #- include: braces
    - include: numbers
    - include: operators
    - include: class_definitions
    - include: class_calls
    - include: function_definitions
    - include: predifined_function_calls
    - include: custom_function_calls
    - include: variables
    
    - match: ((?<=^|\s)%(?=\s))
      scope: invalid.deprecated.ahk
    
  double_quoted_strings:
    - include: escaped
    - match: ("(?!.*[^`]*"))
      scope: invalid.illegal.ahk
      
    - match: ("(?=.*[^`]*"))
      scope: punctuation.definition.string.begin.ahk
      push:
        - include: escaped
        - meta_scope: string.quoted.double.ahk
        - match: (")
          scope: punctuation.definition.string.end.ahk
          pop: true
          
  single_quoted_strings:
    - include: escaped
    - match: ('(?!.*[^`]*'))
      scope: invalid.illegal.ahk
      
    - match: ('(?=.*[^`]*'))
      scope: punctuation.definition.string.begin.ahk
      push:
        - include: escaped
        - meta_scope: string.quoted.single.ahk
        - match: (')
          scope: punctuation.definition.string.end.ahk
          pop: true
          
  escaped:
    - match: (`[`;nrbtsvaf"']?)
      scope: constant.character.escape.ahk
      
  parentheses:
    - match: (\()
      scope: punctuation.section.parens.begin.ahk
      push:
        - include: Expressions
        - meta_scope: meta.parens.ahk
        - match: (\))
          scope: punctuation.section.parens.end.ahk
          pop: true
  brackets:
    - match: (\[)
      scope: punctuation.section.brackets.begin.ahk
      push:
        - include: Expressions
        - meta_scope: meta.brackets.ahk
        - match: (\])
          scope: punctuation.section.brackets.end.ahk
          pop: true
  braces:
    - match: ({)
      scope: punctuation.section.braces.begin.ahk
      push:
        - include: main
        - meta_scope: meta.braces.ahk
        - match: (})
          scope: punctuation.section.braces.end.ahk
          pop: true
      
  operators:
    - match: (\*\*|\/\/|\+\+|--|\*|\/|\+|-)
      scope: keyword.operator.arithmetic.ahk
    - match: ((<<|>>|\/\/|:|\+|-|\*|\/|\.|\||&|\^)=)
      scope: keyword.operator.assignment.ahk
    - match: (<<|>>|~|&|\^|\|)
      scope: keyword.operator.bitwise.ahk
    - match: (~=|<=|>=|==|<>|!=|&&|\|\||<|>|=|!)
      scope: keyword.operator.logical.ahk
    - match: (?<=^|\s)(?i:IS|IN|CONTAINS|NOT|AND|OR)(?=$|\s)
      scope: keyword.operator.word.ahk
    - match: ((?<=^|\s)\.(?=\s))
      scope: keyword.operator.concatenate.ahk
    - match: (\?)
      scope: keyword.operator.ternary.if.ahk
      push:
        - include: Expressions
        - match: (:)
          scope: keyword.operator.ternary.else.ahk
          pop: true
      
  numbers:
    - include: decimal_integers
    - include: hexadecimal_integers
    - include: decimal_floats

  decimal_integers:
    - match: (?<!\.|\w)(\+|-)?\b(\d+)\b(?!\.\d)
      scope: constant.numeric.integer.ahk
  hexadecimal_integers:
    - match: (?<!\w)(\+|-)?\b(?i:(0x[\dA-F]+)\b(?!\.[\dA-F]))
      scope: constant.numeric.hex.ahk
  decimal_floats:
    - match: (?<!\w)(\+|-)?(\d+\.\d+|(?<!\w|\.)\.\d+)
      scope: constant.numeric.float.ahk
      
  class_definitions:
    - match: (?i:^\s*Class)
      scope: storage.type.ahk
      push:
        - meta_scope: meta.class.ahk
        - match: (?i:({{valid_name}})(\s+(extends)\s+({{valid_name}}))?)
          captures:
            1: entity.name.class.ahk
            5: storage.type.ahk
            6: entity.name.class.ahk
          pop: true
  
  parameters:
    - match: (?i:((ByRef)\s+)?({{valid_name}})(\s*(:=)\s*(((\+|-)?((\d*\.\d+)|(\d+|0x[A-F]+))\b)|(".*?"|'.*?')|("|')|(True|False)|([^,)]*)))?)
      captures:
        2: storage.type.ahk
        3: variable.language.ahk
        7: keyword.operator.assignment.ahk
        10: constant.numeric.ahk
        12: constant.numeric.integer.ahk
        13: constant.numeric.float.ahk
        14: string.quoted.ahk
        15: invalid.illegal.ahk
        16: constant.language.ahk
        17: invalid.illegal.ahk

    - match: (,)
      scope: punctuation.separator.ahk
    - match: (\))
      pop: true
  
  class_definitionsSTUPID:
    - meta_include_prototype: false
    - match: (?i:^\s*(Class)\s+({{valid_name}})(\s+(extends)\s+({{valid_name}}))?\s*{)
      captures:
        1: storage.type.ahk
        2: entity.name.class.ahk
        5: storage.type.ahk
        7: entity.name.class.ahk
      push:
        - meta_scope: meta.braces.ahk
        
        - match: (?i:({{valid_name}})(?=\(.*\)\s*{))
          scope: entity.name.function.ahk
          push: parameters
          
        - match: (?i:({{valid_name}})\(.*\)\s*{)
          push:
            - meta_scope: meta.braces.ahk
            - include: main
            
            - match: (})
              pop: true
        
        - match: (})
          pop: true
          
  class_calls:
    - match: ({{valid_name}}(?=\.\S))
      scope: support.class.ahk
    - match: ((\.)({{valid_name}}))(?=\()
      captures:
        3: support.class.method.ahk
    - match: ((\.)({{valid_name}}))(?=\[)?
      captures:
        3: support.class.property.ahk
    - match: (?i:(new)\s+({{valid_name}}))
      captures:
        1: storage.type.ahk
        2: entity.name.class.ahk
        
  #function_definitions:
    #- match: ({{valid_name}})(?=\(.*\)\s+{)
    #  scope: invalid

  predifined_function_calls:
    - match: ({{functions}})(,)
      captures:
        67: invalid.deprecated.ahk
        
    - match: ({{functions}})(?=\s+)
      scope: support.function.builtin.ahk
      push:
        - include: Expressions
        - meta_scope: meta.function-call.ahk
        - match: ($(?!\s*(\*\*|\/\/|<<|>>|~=|<=|>=|<>|!=|IS|IN|CONTAINS|NOT|OR|AND|\|\||&&|\?|:|,|\(|\)|\+|-|\*|\/|!|~|&|\^|\||\.|<|>|=)))
          pop: true
          
    - match: ({{functions}})(?=\()
      scope: support.function.builtin.ahk
      push:
        - include: Expressions
        - meta_scope: meta.function-call.ahk
        - match: (\))
          pop: true
          
        - match: ($(?!\s*(\*\*|\/\/|<<|>>|~=|<=|>=|<>|!=|IS|IN|CONTAINS|NOT|OR|AND|\|\||&&|\?|:|,|\(|\)|\+|-|\*|\/|!|~|&|\^|\||\.|<|>|=)))
          scope: invalid.illegal.ahk
          pop: true
          
  custom_function_calls:
    - match: ({{valid_name}})(?=\()
      scope: support.function.ahk
      push:
        - include: Expressions
        - meta_scope: meta.function-call.ahk
        - match: (\))
          pop: true
          
        - match: ($(?!\s*(\*\*|\/\/|<<|>>|~=|<=|>=|<>|!=|IS|IN|CONTAINS|NOT|OR|AND|\|\||&&|\?|:|,|\(|\)|\+|-|\*|\/|!|~|&|\^|\||\.|<|>|=)))
          scope: invalid.illegal.ahk
          pop: true
          
  variables:
    - match: (True|False)
      scope: constant.language.ahk
      
    - match: \b(?i:A_(Space|Tab|Args|(Initial)?WorkingDir|Script(Dir|Name|FullPath|Hwnd)|Line(Number|File)|This(Func|Label)|Ahk(Version|Path)|IsCompiled|IsUnicode|YYYY|M{2,4}|D{2,4}|WDay|YDay|YWeek|Hour|Min|(M)?Sec|Now(UTC)?|TickCount|Is(Suspended|Paused|Critical)|TitleMatchMode(Speed)?|DetectHidden(Windows|Text)|StringCaseSense|FileEncoding|Send(Mode|Level)|StoreCapslockMode|Key(Delay|Duration)(Play)?|(Win|Control)Delay|MouseDelay(Play)?|DefaulMouseSpeed|CoordMode(ToolTip|Pixel|Mouse|Caret|Menu)|RegView|Icon(Hidden|Tip|File|Number)|TimeIdle(Physical)?|This(Menu(Item(Pos)?)?|Hotkey)|Prior(Hotkey|Key)|TimeSince(This|Prior)Hotkey|EndChar|ComSpec|Temp|OSVersion|Is64bitOS|PtrSize|Language|(Computer|User)Name|WinDir|ProgramFiles|(AppData|Desktop|StartMenu|Programs|Startup)(Common)?|MyDocuments|IsAdmin|Screen(Width|Height|DPI)|IPAdress[1-4]|Cursor|Caret(X|Y)|EventInfo|LastError|Index|LoopFile((Short)?Name|Ext|(Full|Short)?Path|Dir|Time(Modified|Created|Accessed)|Attrib|Size(KB|MB)?)|LoopReg(Name|Type|Key|TimeModified)|Loop(ReadLine|Field))|Clipboard(All)?|ErrorLevel)\b
      scope: variable.language.ahk constant.language.ahk
      
    - match: ({{invalid_name}})
      scope: invalid.illegal.ahk
      
    - match: (?i:Global|Static)\b
      scope: storage.type.ahk
      
    - match: ({{valid_name}})
      scope: variable.language.ahk

  continuation_sections:
    - match: \s*(\()\s*(((?i:Join(`[`;nrbtsvaf"']|\S){0,15}|LTrim0|LTrim|RTrim0|Comments|Comment|Com|C|Quotes|Q|`|(.*))( |$))*)?
      captures:
        1: punctuation.section.group.begin.ahk
        2: option.continuation_section.ahk
        5: invalid.illegal.ahk
      push:        
        - meta_scope: meta.group.ahk
        - match: (\n\s*\))
          scope: punctuation.section.group.end.ahk
          pop: true
